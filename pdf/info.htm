<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<title>Templates</title>
<style type="text/css">
body {font-family:"Times New Roman",serif}
h1 {font:bold 135% Arial,sans-serif; color:#4000A0; margin-bottom:0.9em}
h2 {font:bold 95% Arial,sans-serif; color:#900000; margin-top:1.5em; margin-bottom:1em}
</style>
</head>
<body>
<h1>Templates</h1>
<h2>Informations</h2>
Author: <a href="mailto:fpdf4zos@dgmgdm.com?subject=Templates">David</a><br>
License: FPDF
<h2>Description</h2>
This script adds templates to FPDF for building documents containing a large number of similar pages.
Typically, when a PDF is built with many pages sharing the same layout while only text changes,
it can prove useful to use a template which will be defined only once as a single object and will
be included in each page requiring that layout.<br><br>
A template is defined by an external file containing a subset of raw FPDF instructions.
This approach brings several benefits:
<ul>
	<li>If the page layout is rather sophisticated, including a set of instructions only <em>once</em> in the PDF file
	instead of having those present in each and every page will significantly reduce the overall file size.
	In the example provided, that size is divided by two when compared to a PDF produced the standard way.</li>
	<li>Separating layout design from PHP programming may make life easier for teams in charge of authoring documents.
	Different people may be assigned to layout design on one hand and data management on the other hand.
	The first team will only manipulate FPDF instructions without PHP programming while the other team
	will focus on data without bothering with color, fonts, positions, etc.</li>
	<li>Finally, a powerful anchor feature has also been added which further enhances this {development / design}
	separation. It ties data to anchor IDs defined in templates which specify either a set of
	text properties (color, position, font) or a set of column widths.</li>
</ul>
<h4>Template rules</h4>
<ul>
	<li>Templates must contain a subset of the FPDF instructions available in the FPDF class being used. Namely,
	this subset includes the following instructions: <tt>Cell()</tt>, <tt>Image()</tt>, <tt>Line()</tt>, <tt>Ln()</tt>,
	<tt>Rect()</tt>, <tt>SetDrawColor()</tt>, <tt>SetFillColor()</tt>, <tt>SetFont()</tt>, <tt>SetFontSize()</tt>,
	<tt>SetLeftMargin()</tt>, <tt>SetLineWidth()</tt>, <tt>SetMargins()</tt>, <tt>SetRightMargin()</tt>,
	<tt>SetTextColor()</tt>, <tt>SetX()</tt>, <tt>SetXY()</tt>, <tt>SetY()</tt>, <tt>Text()</tt>, <tt>Write()</tt>.</li>
	<li>If the current PDF class integrates some extended instructions such as <tt>Rotate()</tt>, <tt>RoundedRect()</tt>,
	<tt>Circle()</tt> or <tt>Ellipse()</tt>, they are also available within templates.</li>
	<li>It is not allowed to define links in templates.</li>
	<li>A page may include zero, one or several templates. A template may be present in all or in only a subset of pages.</li>
	<li>Every line starting with one of the characters <tt>[';', '/', '*']</tt> is considered comment and ignored.</li>
</ul>
<h4>Anchor definition</h4>
To define a text anchor within a template, use <tt>SetTextProp()</tt> with the following arguments:<br>
<pre>SetTextProp(<b>string</b> anchor_id, <b>float</b> x_pos, <b>float</b> y_pos, <b>float</b> width, <b>float</b> height, <b>string</b> font_family, <b>string</b> font style, <b>float</b> font_size)</pre><br>
To define a column anchor, use <tt>SetColumns()</tt> with the following arguments:<br>
<pre style="margin-bottom:2em">SetColumns(<b>string</b> anchor_id, <b>float</b> col00, <b>float</b> col01, <b>float</b> col02, ...,  <b>float</b> col18, <b>float</b> col19)</pre>
<i>Caution</i>: anchor IDs are cross-template which means that they should be unique for a given PDF. If two
templates used in the same PDF have anchors with the same ID, the last one will take precedence. There is however a
clear distinction between text and column anchors, which means that a text anchor and a column anchor can
share the same ID.<br><br>
The method to load a template is:
<div style="margin:1.5em 0 2em 0">
	<code><b>int</b> LoadTemplate(<b>string</b> file_tpl [, <b>boolean</b> verbose])</code><br><br>
	<code><u>file_tpl</u></code>: file name containing the template.<br>
	<code><u>verbose</u></code>: boolean indicating if each processed instruction should be logged to stdout. Defaults to false.
</div>
If successful, this function returns a positive integer usable at a later stage by <tt>IncludeTemplate()</tt>:
<div style="margin:1.2em 0 2em 0">
	<code>IncludeTemplate(<b>int</b> handle)</code><br><br>
	<code><u>handle</u></code>: handle returned by a previous call to LoadTemplate()
</div>
The method to output a text according to a set of properties defined in a template is:
<div style="margin:1.2em 0 1.5em 0">
	<code><b>array</b> ApplyTextProperties(<b>string</b> anchor_id, <b>string</b> text])</code><br><br>
	<code><u>anchor_id</u></code>: anchor identifier specified in one of the templates previously loaded.<br>
	<code><u>text</u></code>: string containing the text to output. If empty, text properties are still applied (position, color, font).
</div>
If successful, the method returns an associative array with the following keys:
<pre style="line-height:90%; margin-left:1em">
px  =&gt;  X position (float)<br>
py  =&gt;  Y position (float)<br>
ix  =&gt;  width or delta_x (float)<br>
iy  =&gt;  height or delta_y (float)<br>
fr  =&gt;  text color - red component (int)<br>
fg  =&gt;  text color - green component (int)<br>
fb  =&gt;  text color - blue component (int)<br>
fam =&gt;  font family (string)<br>
sty =&gt;  font style (string)<br>
siz =&gt;  font size (float)<br>
</pre>
The method to retrieve an array of column widths associated with an anchor ID is:
<div style="margin:1.2em 0 1.5em 0">
	<code><b>array</b> GetColumns(<b>string</b> anchor_id)</code><br><br>
	<code><u>anchor_id</u></code>: anchor identifier specified in one of the templates previously loaded.
</div>
If successful, this method returns an array containing the widths of up to 20 columns.
</body>
</html>
